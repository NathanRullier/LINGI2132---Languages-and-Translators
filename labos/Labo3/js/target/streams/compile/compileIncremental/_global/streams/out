[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\shared\src\main\scala\DSL\Tile.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\shared\src\main\scala\DSL\SnakeGame.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\shared\src\main\scala\DSL\Snake.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\js\src\main\scala\DSL\GridCanvasy.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\shared\src\main\scala\DSL\GameObject.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\shared\src\main\scala\DSL\Settings.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\shared\src\main\scala\DSL\Game.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\js\src\main\scala\DSL\Canvasy.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\js\src\main\scala\webapp\Main.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\shared\src\main\scala\DSL\MovementHandler.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(DSL.Direction, DSL.Canvasy, DSL.GridCanvasy, DSL.TileType, DSL.SnakeGame, DSL.Game, DSL.Settings, webapp.Main, DSL.MovementHandler, DSL.Snake, DSL.Tile, DSL.GameObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(DSL.Direction, DSL.Canvasy, DSL.GridCanvasy, DSL.TileType, DSL.SnakeGame, DSL.Game, DSL.Settings, webapp.Main, DSL.MovementHandler, DSL.Snake, DSL.Tile, DSL.GameObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\js\src\main\scala\DSL\Canvasy.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\js\src\main\scala\webapp\Main.scala, C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\shared\src\main\scala\DSL\MovementHandler.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.Direction, DSL.Canvasy, DSL.GridCanvasy, DSL.TileType, DSL.SnakeGame, DSL.Game, DSL.Settings, webapp.Main, DSL.MovementHandler, DSL.Snake, DSL.Tile, DSL.GameObject[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding DSL.GridCanvasy by DSL.Canvasy[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding DSL.MovementHandler by DSL.Settings[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 11 Scala sources to C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\js\target\scala-2.13\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 6cc69be for Scala compiler version 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:C:\Users\natha\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-js\scalajs-compiler_2.13.1\1.0.1\scalajs-compiler_2.13.1-1.0.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\natha\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.1\scala-library-2.13.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\MyShit\Ecole\Erasmus\LINGI2132 - Languages and Translators\labos\Labo3\js\target\scala-2.13\classes;C:\Users\natha\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-js\scalajs-library_2.13\1.0.1\scalajs-library_2.13-1.0.1.jar;C:\Users\natha\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-js\scalajs-dom_sjs1_2.13\1.0.0\scalajs-dom_sjs1_2.13-1.0.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 3.1555123 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from webapp.Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: webapp.Main[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(webapp.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(webapp.Main,ModifiedNames(changes = UsedName(finalize,[Default]))) invalidates 1 classes due to The webapp.Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(webapp.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.Settings...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.Settings[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.Settings)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.Settings,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(Settings,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]))) invalidates 1 classes due to The DSL.Settings has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(Settings,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.Settings)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.MovementHandler...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.MovementHandler[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.MovementHandler)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.MovementHandler,ModifiedNames(changes = UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(MovementHandler,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]))) invalidates 1 classes due to The DSL.MovementHandler has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(MovementHandler,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.MovementHandler)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.GridCanvasy...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.GridCanvasy[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.GridCanvasy)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.GridCanvasy,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(clone,[Default]), UsedName(getShapes,[Default]), UsedName(initRender,[Default]), UsedName(finalize,[Default]), UsedName(DSL;GridCanvasy;init;,[Default]), UsedName(!=,[Default]), UsedName(boardSquareList,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(GridCanvasy,[Default]), UsedName(resetGame,[Default]), UsedName(asInstanceOf,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(synchronized,[Default]), UsedName(draw,[Default]), UsedName(notifyAll,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(+=,[Default]), UsedName(isInstanceOf,[Default]))) invalidates 1 classes due to The DSL.GridCanvasy has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(clone,[Default]), UsedName(getShapes,[Default]), UsedName(initRender,[Default]), UsedName(finalize,[Default]), UsedName(DSL;GridCanvasy;init;,[Default]), UsedName(!=,[Default]), UsedName(boardSquareList,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(GridCanvasy,[Default]), UsedName(resetGame,[Default]), UsedName(asInstanceOf,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(synchronized,[Default]), UsedName(draw,[Default]), UsedName(notifyAll,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(+=,[Default]), UsedName(isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.GridCanvasy)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.Canvasy...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.Canvasy[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.Canvasy)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of webapp.Main: Set(UsedName(pixelSize,[Default]), UsedName(Canvasy,[Default]), UsedName(GameSpeed,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.Canvasy,ModifiedNames(changes = UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(Canvasy,[Default]), UsedName(finalize,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]))) invalidates 2 classes due to The DSL.Canvasy has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(Canvasy,[Default]), UsedName(finalize,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.Canvasy)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(webapp.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.SnakeGame...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.SnakeGame[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.SnakeGame)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.SnakeGame,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(win,[Default]), UsedName(direction,[Default]), UsedName(clone,[Default]), UsedName(isGameOver,[Default]), UsedName(resetGameBoard,[Default]), UsedName(compteur,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(gameWon,[Default]), UsedName(##,[Default]), UsedName(snake,[Default]), UsedName(board,[Default]), UsedName(gameOver,[Default]), UsedName(toString,[Default]), UsedName(newGame,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName(lastDirection,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(SnakeGame,[Default]), UsedName(checkCollisions,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(asInstanceOf,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(synchronized,[Default]), UsedName(moveSnake,[Default]), UsedName(notifyAll,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]), UsedName(==,[Default]), UsedName(initGame,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(DSL;SnakeGame;init;,[Default]), UsedName(generateNewFood,[Default]), UsedName(isInstanceOf,[Default]))) invalidates 1 classes due to The DSL.SnakeGame has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(win,[Default]), UsedName(direction,[Default]), UsedName(clone,[Default]), UsedName(isGameOver,[Default]), UsedName(resetGameBoard,[Default]), UsedName(compteur,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(gameWon,[Default]), UsedName(##,[Default]), UsedName(snake,[Default]), UsedName(board,[Default]), UsedName(gameOver,[Default]), UsedName(toString,[Default]), UsedName(newGame,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName(lastDirection,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(SnakeGame,[Default]), UsedName(checkCollisions,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(asInstanceOf,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(synchronized,[Default]), UsedName(moveSnake,[Default]), UsedName(notifyAll,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]), UsedName(==,[Default]), UsedName(initGame,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(DSL;SnakeGame;init;,[Default]), UsedName(generateNewFood,[Default]), UsedName(isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.SnakeGame)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.GameObject...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.GameObject[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.GameObject)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.GameObject,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(GameObject,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(DSL;GameObject;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]))) invalidates 1 classes due to The DSL.GameObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(GameObject,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(DSL;GameObject;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.GameObject)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.Tile...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.Tile[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.Tile)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.Tile,ModifiedNames(changes = UsedName(decrementTimer,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(getSquare,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(tileType,[Default]), UsedName(Tile,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(timer,[Default]), UsedName($isInstanceOf,[Default]), UsedName(DSL;Tile;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(incrementTimer,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]))) invalidates 1 classes due to The DSL.Tile has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(decrementTimer,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(getSquare,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(tileType,[Default]), UsedName(Tile,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(timer,[Default]), UsedName($isInstanceOf,[Default]), UsedName(DSL;Tile;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(incrementTimer,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.Tile)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.Game...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.Game[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.Game)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.Game,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(win,[Default]), UsedName(clone,[Default]), UsedName(isGameOver,[Default]), UsedName(resetGameBoard,[Default]), UsedName(compteur,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(gameWon,[Default]), UsedName(##,[Default]), UsedName(board,[Default]), UsedName(gameOver,[Default]), UsedName(toString,[Default]), UsedName(newGame,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(DSL;Game;init;,[Default]), UsedName(checkCollisions,[Default]), UsedName(getClass,[Default]), UsedName(Game,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(asInstanceOf,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]), UsedName(==,[Default]), UsedName(initGame,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]))) invalidates 1 classes due to The DSL.Game has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(NumberOfSquaresWidthSnake,[Default]), UsedName(pixelSize,[Default]), UsedName(win,[Default]), UsedName(clone,[Default]), UsedName(isGameOver,[Default]), UsedName(resetGameBoard,[Default]), UsedName(compteur,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(gameWon,[Default]), UsedName(##,[Default]), UsedName(board,[Default]), UsedName(gameOver,[Default]), UsedName(toString,[Default]), UsedName(newGame,[Default]), UsedName(SnakeLengthToWin,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(DSL;Game;init;,[Default]), UsedName(checkCollisions,[Default]), UsedName(getClass,[Default]), UsedName(Game,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(asInstanceOf,[Default]), UsedName(BasicSnakeLength,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(NumberOfSquaresHeightSnake,[Default]), UsedName(GameSpeed,[Default]), UsedName(==,[Default]), UsedName(initGame,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.Game)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.Snake...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.Snake[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.Snake)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.Snake,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(Snake,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(eatFood,[Default]), UsedName(toString,[Default]), UsedName(posY,[Default]), UsedName(posX,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(length,[Default]), UsedName($isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(addBody,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(DSL;Snake;init;,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]))) invalidates 1 classes due to The DSL.Snake has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(Snake,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(eatFood,[Default]), UsedName(toString,[Default]), UsedName(posY,[Default]), UsedName(posX,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(length,[Default]), UsedName($isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(addBody,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(DSL;Snake;init;,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.Snake)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from DSL.TileType...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: DSL.TileType[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(DSL.TileType)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(DSL.TileType,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(ValueOrdering,[Implicit]), UsedName(Snake,[Default]), UsedName(TileType,[Default]), UsedName(maxId,[Default]), UsedName(clone,[Default]), UsedName(values,[Default]), UsedName(apply,[Default]), UsedName(Empty,[Default]), UsedName(nextId,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(readResolve,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(ValueSet,[Default]), UsedName($isInstanceOf,[Default]), UsedName(nextName,[Default]), UsedName(Food,[Default]), UsedName(withName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(Val,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(Value,[Default]), UsedName(isInstanceOf,[Default]))) invalidates 1 classes due to The DSL.TileType has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ValueOrdering,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(DSL.TileType)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
